server.port=7070

# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection
spring.datasource.url=jdbc:postgresql://localhost:5432/MyTripsDB
spring.datasource.username=postgres
spring.datasource.password=password
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.default_schema=mytripapp
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=update
# Disable feature detection by this undocumented parameter. Check the org.hibernate.engine.jdbc.internal.JdbcServiceImpl.configure method for more details.
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false 

# Naming strategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# ===============================
# = Thymeleaf configurations
# ===============================
#spring.thymeleaf.mode=LEGACYHTML5
#spring.thymeleaf.cache=false

# ===============================
# TOMCAT
# ===============================
#server.address=127.0.0.1
#server.error.whitelabel.enabled=false
#server.tomcat.accesslog.enabled=true

# ===============================
# SMTP EMAIL
# ===============================
#spring.mail.host = smtp.mailhost.com
#spring.mail.username = mailUser
#spring.mail.password = mailPass
#spring.mail.port = 587
#spring.mail.properties.mail.smtp.auth = true
#spring.mail.properties.mail.smtp.starttls.enable = true

# ===============================
# = LOGGING
# ===============================
#logging.level.org.springframework.web=DEBUG
#logging.level.org.hibernate=ERROR


# ==============================================================
# = Spring Security / Queries for AuthenticationManagerBuilder
# ==============================================================
#spring.queries.users-query=select email, password from user where email=?
#spring.queries.roles-query=select u.email, r.role from user u inner join user_role ur on(u.user_id=ur.user_id) inner join role r on(ur.role_id=r.rol0.e_id) where u.email=?

logging.level.org.springframework=WARN
logging.level.org.hibernate=WARN
logging.level.eu.kielczewski=DEBUG
spring.freemarker.template-loader-path=/WEB-INF/ftl
spring.freemarker.expose-request-attributes=true
spring.freemarker.expose-spring-macro-helpers=true